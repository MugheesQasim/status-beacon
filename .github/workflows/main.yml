# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job for frontend
  frontend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps to be executed for the frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js to use npm for React app
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies for the frontend
      - name: Install dependencies
        working-directory: frontend
        run: npm install
        
      # # Run tests for the React app in the frontend folder
      # - name: Run tests
      #   working-directory: frontend
      #   run: npm test -- --watchAll=false
  
  # # Job for backend
  backend:
    runs-on: ubuntu-latest

    steps:
      # Add backend specific steps here when ready
      - name: Checkout code
        uses: actions/checkout@v4

    # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'
    
    # Cache Node.js modules to speed up subsequent builds
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

    # Install dependencies
      - name: Install dependencies
        run: npm install

    # Compile TypeScript code
      - name: Compile TypeScript
        run: npm run build      

    # Run backend tests
      - name: Run backend tests
        run: npm test